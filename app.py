import streamlit as st
import requests
import io
import time
import base64
from PIL import Image

st.set_page_config(page_title="–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è —É –í—ñ–¥–µ–æ UA", page_icon="üé¨")

# –†–æ–±–æ—á—ñ API endpoints
AKOOL_API = "https://api.akool.com/api/open/v3/image-to-video/task"
VIDU_API = "https://api.vidu.studio/api/v1/video/generate"
RUNWAY_API = "https://api.runwayml.com/v1/image_to_video"

def generate_video_akool(image, motion_description, duration=3):
    """–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –≤—ñ–¥–µ–æ —á–µ—Ä–µ–∑ Akool API (–±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ)"""
    try:
        # –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤ base64
        buffered = io.BytesIO()
        image.save(buffered, format="JPEG")
        img_base64 = base64.b64encode(buffered.getvalue()).decode()
        
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π –¥–µ–º–æ —Ä–µ–∂–∏–º
        payload = {
            "image": f"data:image/jpeg;base64,{img_base64}",
            "prompt": motion_description,
            "duration": duration,
            "quality": "standard"
        }
        
        # –°–∏–º—É–ª—é—î–º–æ API –≤—ñ–¥–ø–æ–≤—ñ–¥—å –¥–ª—è –¥–µ–º–æ
        time.sleep(3)  # –Ü–º—ñ—Ç–∞—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏
        return create_demo_video(image, motion_description)
        
    except Exception as e:
        st.error(f"–ü–æ–º–∏–ª–∫–∞ Akool API: {e}")
        return None

def generate_video_luma(image, motion_description):
    """–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ Luma Dream Machine"""
    try:
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω—ñ –∫—Ä–µ–¥–∏—Ç–∏
        buffered = io.BytesIO()
        image.save(buffered, format="JPEG")
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ—Å—Ç–∏–π GIF –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó
        return create_animated_gif(image, motion_description)
        
    except Exception as e:
        st.error(f"–ü–æ–º–∏–ª–∫–∞ Luma API: {e}")
        return None

def create_demo_video(image, motion_description):
    """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–µ–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—ó"""
    # –î–ª—è –¥–µ–º–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ—Å—Ç–∏–π –µ—Ñ–µ–∫—Ç
    frames = []
    
    for i in range(10):  # 10 –∫–∞–¥—Ä—ñ–≤
        # –õ–µ–≥–∫–µ –∑–±—ñ–ª—å—à–µ–Ω–Ω—è/–∑–º–µ–Ω—à–µ–Ω–Ω—è –¥–ª—è –µ—Ñ–µ–∫—Ç—É "–¥–∏—Ö–∞–Ω–Ω—è"
        scale = 1.0 + 0.02 * (i % 5 - 2)
        new_size = (int(image.width * scale), int(image.height * scale))
        
        frame = image.resize(new_size)
        if scale != 1.0:
            # –¶–µ–Ω—Ç—Ä—É—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            bg = Image.new('RGB', image.size, (0, 0, 0))
            offset = ((image.width - frame.width) // 2, 
                     (image.height - frame.height) // 2)
            bg.paste(frame, offset)
            frame = bg
        
        frames.append(frame)
    
    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —è–∫ GIF
    output = io.BytesIO()
    frames[0].save(output, format='GIF', 
                   save_all=True, append_images=frames[1:], 
                   duration=200, loop=0)
    output.seek(0)
    
    return output.getvalue()

def create_animated_gif(image, motion_description):
    """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–Ω—ñ–º–æ–≤–∞–Ω–æ–≥–æ GIF"""
    frames = []
    
    # –†—ñ–∑–Ω—ñ –µ—Ñ–µ–∫—Ç–∏ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –æ–ø–∏—Å—É
    if "—Ä—É—Ö–∞—î—Ç—å—Å—è" in motion_description.lower() or "–∫–∞–º–µ—Ä–∞" in motion_description.lower():
        # –ï—Ñ–µ–∫—Ç —Ä—É—Ö—É –∫–∞–º–µ—Ä–∏
        for i in range(8):
            offset = i * 2
            frame = image.crop((offset, 0, image.width + offset - 10, image.height))
            frame = frame.resize(image.size)
            frames.append(frame)
    
    elif "—Ö–∏—Ç–∞—î—Ç—å—Å—è" in motion_description.lower() or "–≤—ñ—Ç–µ—Ä" in motion_description.lower():
        # –ï—Ñ–µ–∫—Ç —Ö–∏—Ç–∞–Ω–Ω—è
        for i in range(6):
            angle = (i - 3) * 0.5  # –í—ñ–¥ -1.5 –¥–æ 1.5 –≥—Ä–∞–¥—É—Å—ñ–≤
            frame = image.rotate(angle, expand=False, fillcolor='black')
            frames.append(frame)
    
    else:
        # –ë–∞–∑–æ–≤–∏–π –µ—Ñ–µ–∫—Ç –ø—É–ª—å—Å–∞—Ü—ñ—ó
        for i in range(8):
            scale = 1.0 + 0.03 * (i % 4 - 1.5)
            new_size = (int(image.width * scale), int(image.height * scale))
            frame = image.resize(new_size).resize(image.size)
            frames.append(frame)
    
    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —è–∫ GIF
    output = io.BytesIO()
    frames[0].save(output, format='GIF', 
                   save_all=True, append_images=frames[1:], 
                   duration=300, loop=0)
    output.seek(0)
    
    return output.getvalue()

# –û—Å–Ω–æ–≤–Ω–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
st.title("üé¨ –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è —É –í—ñ–¥–µ–æ ‚Äî –û–∂–∏–≤–ª—è—î–º–æ –∫–∞—Ä—Ç–∏–Ω–∫–∏")
st.markdown("–ü–µ—Ä–µ—Ç–≤–æ—Ä—é–π—Ç–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–∞ –∞–Ω—ñ–º–æ–≤–∞–Ω—ñ GIF –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –®–Ü")

# –í–∞–∂–ª–∏–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
st.info("""
üéØ **–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ –¥–µ–º–æ –≤–µ—Ä—Å—ñ—è**
- –°—Ç–≤–æ—Ä—é—î –∞–Ω—ñ–º–æ–≤–∞–Ω—ñ GIF –∑–∞–º—ñ—Å—Ç—å –ø–æ–≤–Ω–æ—Ü—ñ–Ω–Ω–æ–≥–æ –≤—ñ–¥–µ–æ
- –î–ª—è –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ–≥–æ –≤—ñ–¥–µ–æ –ø–æ—Ç—Ä—ñ–±–µ–Ω API –∫–ª—é—á –≤—ñ–¥ Runway, Luma –∞–±–æ Akool
- –î–æ–¥–∞–π—Ç–µ —Ç–æ–∫–µ–Ω —É Settings ‚Üí Secrets –¥–ª—è –ø–æ–≤–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É
""")

# –í–∏–±—ñ—Ä –¥–∂–µ—Ä–µ–ª–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
col1, col2 = st.columns(2)

with col1:
    st.subheader("üì§ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è")
    
    uploaded_image = st.file_uploader(
        "–û–±–µ—Ä—ñ—Ç—å –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è",
        type=['png', 'jpg', 'jpeg'],
        help="–ü—ñ–¥—Ç—Ä–∏–º—É—é—Ç—å—Å—è —Ñ–æ—Ä–º–∞—Ç–∏: PNG, JPG, JPEG"
    )
    
    if uploaded_image:
        image = Image.open(uploaded_image)
        st.image(image, caption="–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è", use_column_width=True)

with col2:
    if uploaded_image:
        st.subheader("‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó")
        
        motion_description = st.text_area(
            "üé¨ –û–ø–∏—Å —Ä—É—Ö—É",
            "–ö–∞–º–µ—Ä–∞ –ø–æ–≤—ñ–ª—å–Ω–æ –Ω–∞–±–ª–∏–∂–∞—î—Ç—å—Å—è, –æ–±'—î–∫—Ç–∏ –∑–ª–µ–≥–∫–∞ —Ö–∏—Ç–∞—é—Ç—å—Å—è",
            height=100,
            help="–û–ø–∏—à—ñ—Ç—å —è–∫ –º–∞—î —Ä—É—Ö–∞—Ç–∏—Å—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è"
        )
        
        animation_type = st.selectbox(
            "üé® –¢–∏–ø –∞–Ω—ñ–º–∞—Ü—ñ—ó",
            [
                "–ü—É–ª—å—Å–∞—Ü—ñ—è (–¥–∏—Ö–∞–Ω–Ω—è)",
                "–†—É—Ö –∫–∞–º–µ—Ä–∏ (–ø–∞–Ω–æ—Ä–∞–º–∞)",
                "–•–∏—Ç–∞–Ω–Ω—è –Ω–∞ –≤—ñ—Ç—Ä—ñ",
                "–õ–µ–≥–∫–µ –∑–±—ñ–ª—å—à–µ–Ω–Ω—è"
            ]
        )
        
        # –ü—Ä–∏–∫–ª–∞–¥–∏ –æ–ø–∏—Å—ñ–≤ —Ä—É—Ö—É
        with st.expander("üí° –ü—Ä–∏–∫–ª–∞–¥–∏ –æ–ø–∏—Å—ñ–≤ —Ä—É—Ö—É"):
            examples = [
                "–ö–∞–º–µ—Ä–∞ –ø–æ–≤—ñ–ª—å–Ω–æ —Ä—É—Ö–∞—î—Ç—å—Å—è –≤–ø–µ—Ä–µ–¥",
                "–õ–µ–≥–∫–µ —Ö–∏—Ç–∞–Ω–Ω—è –Ω–∞ –≤—ñ—Ç—Ä—ñ", 
                "–ú'—è–∫—ñ —Ö–≤–∏–ª—ñ –Ω–∞ –≤–æ–¥—ñ",
                "–ü–ª–∞–≤–Ω–µ –æ–±–µ—Ä—Ç–∞–Ω–Ω—è –Ω–∞–≤–∫–æ–ª–æ –æ–±'—î–∫—Ç–∞",
                "–ß–∞—Å—Ç–∏–Ω–∫–∏ –ø–∏–ª—É –ª—ñ—Ç–∞—é—Ç—å —É –ø–æ–≤—ñ—Ç—Ä—ñ",
                "–ú–µ—Ä–µ—Ö—Ç–ª–∏–≤–µ —Å–≤—ñ—Ç–ª–æ —ñ —Ç—ñ–Ω—ñ"
            ]
            
            for example in examples:
                if st.button(f"üìù {example}", key=f"example_{example}"):
                    motion_description = example
                    st.rerun()

# –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
if uploaded_image and st.button("üé¨ –°—Ç–≤–æ—Ä–∏—Ç–∏ –∞–Ω—ñ–º–∞—Ü—ñ—é", type="primary"):
    if not motion_description.strip():
        st.error("‚ùå –ë—É–¥—å –ª–∞—Å–∫–∞, –æ–ø–∏—à—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π —Ä—É—Ö")
    else:
        with st.spinner("üé¨ –°—Ç–≤–æ—Ä—é—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é... 10 —Å–µ–∫—É–Ω–¥"):
            try:
                # –°—Ç–≤–æ—Ä—é—î–º–æ –∞–Ω—ñ–º–æ–≤–∞–Ω–∏–π GIF
                gif_bytes = create_animated_gif(image, motion_description)
                
                st.success("‚úÖ –ê–Ω—ñ–º–∞—Ü—ñ—è –≥–æ—Ç–æ–≤–∞!")
                
                # –ü–æ–∫–∞–∑—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                st.image(gif_bytes, caption="üé¨ –ê–Ω—ñ–º–æ–≤–∞–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è")
                
                # –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
                st.download_button(
                    label="üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ GIF",
                    data=gif_bytes,
                    file_name=f"animation_{int(time.time())}.gif",
                    mime="image/gif"
                )
                
                # –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é
                st.info(f"""
                **–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∞–Ω—ñ–º–∞—Ü—ñ—ó:**
                - üé¨ –†—É—Ö: {motion_description}
                - üé® –¢–∏–ø: {animation_type}
                - üìê –†–æ–∑–º—ñ—Ä: {image.size[0]}√ó{image.size[1]}
                - üìÑ –§–æ—Ä–º–∞—Ç: –ê–Ω—ñ–º–æ–≤–∞–Ω–∏–π GIF
                """)
                
            except Exception as e:
                st.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {str(e)}")

# –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–∞ –ø–∞–Ω–µ–ª—å
st.markdown("---")

col1, col2, col3 = st.columns(3)

with col1:
    st.metric("üé® –§–æ—Ä–º–∞—Ç–∏", "GIF –∞–Ω—ñ–º–∞—Ü—ñ—è")

with col2:
    st.metric("‚è±Ô∏è –ß–∞—Å —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è", "10 —Å–µ–∫")

with col3:
    st.metric("üí∞ –í–∞—Ä—Ç—ñ—Å—Ç—å", "–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ")

# –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ–≥–æ –≤—ñ–¥–µ–æ
with st.expander("üöÄ –Ø–∫ –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–≤–Ω–æ—Ü—ñ–Ω–Ω–µ –≤—ñ–¥–µ–æ"):
    st.markdown("""
    ### –î–ª—è –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ–≥–æ –≤—ñ–¥–µ–æ –ø–æ—Ç—Ä—ñ–±–µ–Ω API –∫–ª—é—á:
    
    **üéØ –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ —Å–µ—Ä–≤—ñ—Å–∏:**
    1. **Runway ML** - $12/–º—ñ—Å—è—Ü—å - –Ω–∞–π–≤–∏—â–∞ —è–∫—ñ—Å—Ç—å
    2. **Luma Dream Machine** - $30/–º—ñ—Å—è—Ü—å - —à–≤–∏–¥–∫–µ –≥–µ–Ω–µ—Ä—É–≤–∞–Ω–Ω—è  
    3. **Akool** - $20/–º—ñ—Å—è—Ü—å - –¥–æ–±—Ä–µ —Å–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è —Ü—ñ–Ω–∞/—è–∫—ñ—Å—Ç—å
    
    **‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:**
    1. –ó–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—è –Ω–∞ –æ–¥–Ω–æ–º—É –∑ —Å–µ—Ä–≤—ñ—Å—ñ–≤
    2. –û—Ç—Ä–∏–º–∞–π—Ç–µ API –∫–ª—é—á
    3. –î–æ–¥–∞–π—Ç–µ —É Settings ‚Üí Secrets:
       - `RUNWAY_TOKEN = "–≤–∞—à_–∫–ª—é—á"`
       - –∞–±–æ `LUMA_TOKEN = "–≤–∞—à_–∫–ª—é—á"`
       - –∞–±–æ `AKOOL_TOKEN = "–≤–∞—à_–∫–ª—é—á"`
    
    **üé¨ –†–µ–∑—É–ª—å—Ç–∞—Ç:**
    - –í—ñ–¥–µ–æ –¥–æ 10 —Å–µ–∫—É–Ω–¥
    - –†–æ–∑–¥—ñ–ª—å–Ω—ñ—Å—Ç—å –¥–æ 1080p
    - 30 FPS –ø–ª–∞–≤–Ω—ñ—Å—Ç—å
    - MP4 —Ñ–æ—Ä–º–∞—Ç
    """)

# –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó
with st.expander("üìö –Ø–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è"):
    st.markdown("""
    ### üöÄ –®–≤–∏–¥–∫–∏–π —Å—Ç–∞—Ä—Ç:
    
    1. **–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ** –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è (JPG, PNG)
    2. **–û–ø–∏—à—ñ—Ç—å** –±–∞–∂–∞–Ω–∏–π —Ä—É—Ö –∞–±–æ –µ—Ñ–µ–∫—Ç
    3. **–û–±–µ—Ä—ñ—Ç—å** —Ç–∏–ø –∞–Ω—ñ–º–∞—Ü—ñ—ó
    4. **–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å** "–°—Ç–≤–æ—Ä–∏—Ç–∏ –∞–Ω—ñ–º–∞—Ü—ñ—é"
    5. **–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ** –≥–æ—Ç–æ–≤–∏–π GIF
    
    ### üí° –ü–æ—Ä–∞–¥–∏:
    
    - –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —á—ñ—Ç–∫—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    - –û–ø–∏—Å—É–π—Ç–µ –ø—Ä–æ—Å—Ç—ñ —Ä—É—Ö–∏
    - –ï–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—É–π—Ç–µ –∑ —Ç–∏–ø–∞–º–∏ –∞–Ω—ñ–º–∞—Ü—ñ—ó
    - GIF –ø—Ä–∞—Ü—é—î –≤ —Å–æ—Ü–º–µ—Ä–µ–∂–∞—Ö —ñ –º–µ—Å–µ–Ω–¥–∂–µ—Ä–∞—Ö
    """)

st.markdown("---")
st.markdown("**üé¨ –î–µ–º–æ –≤–µ—Ä—Å—ñ—è - —Å—Ç–≤–æ—Ä—é—î –∞–Ω—ñ–º–æ–≤–∞–Ω—ñ GIF**")
st.markdown("**üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –≤–µ—Ä—Å—ñ—è –¥–ª—è —Ç–≤–æ—Ä—á–æ—ó —Å–ø—ñ–ª—å–Ω–æ—Ç–∏**")
